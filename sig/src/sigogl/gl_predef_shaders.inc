//
// Default sig shaders - (c) Marcelo Kallmann 2016-2018
//

static const char* pds_2dcolored_vert=
"# version 330\n"
"layout(location=0)in vec2 vPos;"
"layout(location=1)in vec4 vColor;"
"uniform mat4 vProj;"
"uniform mat4 vView;"
"uniform float zCoord;"
"flat out vec4 Color;"
"void main()"
"{"
"Color=vColor/255.0;"
"gl_Position=vec4(vPos.x,vPos.y,zCoord,1.0)*vView*vProj;"
"}"
;
static const char* pds_2dcoloredsc_vert=
"# version 330\n"
"layout(location=0)in vec2 vPos;"
"uniform mat4 vProj;"
"uniform mat4 vView;"
"uniform float zCoord;"
"uniform vec4 vColor;"
"flat out vec4 Color;"
"void main()"
"{"
"Color=vColor;"
"gl_Position=vec4(vPos.x,vPos.y,zCoord,1.0)*vView*vProj;"
"}"
;
static const char* pds_2dsmooth_vert=
"# version 330\n"
"layout(location=0)in vec2 vPos;"
"layout(location=1)in vec4 vColor;"
"uniform mat4 vProj;"
"uniform mat4 vView;"
"uniform float zCoord;"
"out vec4 Color;"
"void main()"
"{"
"Color=vColor/255.0;"
"gl_Position=vec4(vPos.x,vPos.y,zCoord,1.0)*vView*vProj;"
"}"
;
static const char* pds_2dtextured_frag=
"# version 330\n"
"uniform int Mode;"
"uniform sampler2D TexId;"
"in vec4 fColor;"
"in vec2 fTexc;"
"out vec4 Color;"
"float contour(in float d,in float w){ return smoothstep(0.5-w,0.5+w,d); }"
"float samp(in vec2 uv,float w){ return contour(texture2D(TexId,uv).r,w); }"
"void ProcessSDTexture()"
"{"
"float dist=texture2D(TexId,fTexc).r;"
"if(dist==0)discard;"
"float w=fwidth(dist)/2.0;"
"float alpha=contour(dist,w);"
"vec2 uv=fTexc.xy;"
"float dscale=0.354;"
"vec2 duv=dscale*(dFdx(uv)+dFdy(uv));"
"vec4 box=vec4(uv-duv,uv+duv);"
"float sum=samp(box.xy,w)+ samp(box.zw,w)+ samp(box.xw,w)+ samp(box.zy,w);"
"alpha=(alpha + 0.5*sum)/3.0;"
"Color=vec4(fColor.rgb,fColor.a*alpha);"
"}"
"void main()"
"{"
"if(Mode==0)Color=fColor;"
"else\n"
"if(Mode==1)Color=texture2D(TexId,fTexc);"
"else\n"
"if(Mode==2)Color=vec4(fColor.rgb*texture2D(TexId,fTexc).r,fColor.a);"
"else\n"
"if(Mode==3)Color=vec4(fColor.rgb,fColor.a*texture2D(TexId,fTexc).r);"
"else\n"
"if(Mode==4)ProcessSDTexture();"
"}"
;
static const char* pds_2dtextured_vert=
"# version 330\n"
"layout(location=0)in vec2 vPos;"
"layout(location=1)in vec4 vColor;"
"layout(location=2)in vec2 vTexc;"
"uniform mat4 vProj;"
"uniform mat4 vView;"
"uniform float zCoord;"
"out vec4 fColor;"
"out vec2 fTexc;"
"void main()"
"{"
"fColor=vColor/255.0;"
"fTexc=vTexc;"
"gl_Position=vec4(vPos.x,vPos.y,zCoord,1.0)*vView*vProj;"
"}"
;
static const char* pds_3dflat_vert=
"# version 330\n"
"layout(location=0)in vec3 vPos;"
"layout(location=1)in vec3 vNorm;"
"uniform mat4	 vProj;"
"uniform mat4	 vView;"
"uniform vec3   lPos;"
"uniform vec3[3] lInt;"
"uniform vec3[4] mColors;"
"uniform float[2] mParams;"
"flat out vec4 Color;"
"vec4 shade(vec3 p,vec3 n,vec3 lp,vec3[3] li,vec3 ka,vec3 kd,vec3 ks,vec3 emi,float sh,float alpha);"
"void main()"
"{"
"vec4 p4=vec4(vPos,1.0f)*vView;"
"vec3 p=p4.xyz/p4.w;"
"vec3 n=normalize(vNorm*transpose(inverse(mat3(vView))));"
"Color=shade(p,n,lPos,lInt,mColors[0],mColors[1],mColors[2],mColors[3],mParams[0],mParams[1]);"
"gl_Position=vec4(p,1.0)*vProj;"
"}"
;
static const char* pds_3dgouraud_vert=
"# version 330\n"
"layout(location=0)in vec3 vPos;"
"layout(location=1)in vec3 vNorm;"
"uniform mat4	 vProj;"
"uniform mat4	 vView;"
"uniform vec3   lPos;"
"uniform vec3[3] lInt;"
"uniform vec3[4] mColors;"
"uniform float[2] mParams;"
"out vec4 Color;"
"vec4 shade(vec3 p,vec3 n,vec3 lp,vec3[3] li,vec3 ka,vec3 kd,vec3 ks,vec3 emi,float sh,float alpha);"
"void main()"
"{"
"vec4 p4=vec4(vPos,1.0f)*vView;"
"vec3 p=p4.xyz/p4.w;"
"vec3 n=normalize(vNorm*transpose(inverse(mat3(vView))));"
"Color=shade(p,n,lPos,lInt,mColors[0],mColors[1],mColors[2],mColors[3],mParams[0],mParams[1]);"
"gl_Position=vec4(p,1.0)*vProj;"
"}"
;
static const char* pds_3dphong_vert=
"# version 330\n"
"layout(location=0)in vec3 vPos;"
"layout(location=1)in vec3 vNorm;"
"uniform mat4 vProj;"
"uniform mat4 vView;"
"out vec3 Pos;"
"out vec3 Norm;"
"void main()"
"{"
"vec4 p4=vec4(vPos,1.0f)*vView;"
"Pos=p4.xyz/p4.w;"
"Norm=normalize(vNorm*transpose(inverse(mat3(vView))));"
"gl_Position=vec4(Pos,1.0)*vProj;"
"}"
;
static const char* pds_3dphongmc_vert=
"# version 330\n"
"layout(location=0)in vec3 vPos;"
"layout(location=1)in vec3 vNorm;"
"layout(location=2)in vec4 vColor;"
"uniform mat4 vProj;"
"uniform mat4 vView;"
"out vec3 Pos;"
"out vec4 Color;"
"out vec3 Norm;"
"void main()"
"{"
"vec4 p4=vec4(vPos,1.0f)*vView;"
"Pos=p4.xyz/p4.w;"
"Color=vColor/255.0;"
"Norm=normalize(vNorm*transpose(inverse(mat3(vView))));"
"gl_Position=vec4(Pos,1.0)*vProj;"
"}"
;
static const char* pds_3dsmooth_vert=
"# version 330\n"
"layout(location=0)in vec3 vPos;"
"layout(location=1)in vec4 vColor;"
"uniform mat4 vProj;"
"uniform mat4 vView;"
"out vec4 Color;"
"void main()"
"{"
"Color=vColor/255.0;"
"gl_Position=vec4(vPos.x,vPos.y,vPos.z,1.0)*vView*vProj;"
"}"
;
static const char* pds_3dsmoothsc_vert=
"# version 330\n"
"layout(location=0)in vec3 vPos;"
"uniform mat4 vProj;"
"uniform mat4 vView;"
"uniform vec4 vColor;"
"out vec4 Color;"
"void main()"
"{"
"Color=vColor;"
"gl_Position=vec4(vPos.x,vPos.y,vPos.z,1.0)*vView*vProj;"
"}"
;
static const char* pds_3dtextured_frag=
"# version 330\n"
"in vec3 Norm;"
"in vec3 Pos;"
"in vec2 Texc;"
"out vec4 fColor;"
"uniform vec3   lPos;"
"uniform vec3[3] lInt;"
"uniform vec3[4] mColors;"
"uniform float[2] mParams;"
"uniform int Mode;"
"uniform sampler2D TexId;"
"vec4 shade(vec3 p,vec3 n,vec3 lp,vec3[3] li,vec3 ka,vec3 kd,vec3 ks,vec3 emi,float sh,float alpha);"
"void main()"
"{"
"vec3 kd;"
"float alpha;"
"if(Mode==0)"
"{	vec4 tex=texture2D(TexId,Texc);"
"kd=tex.rgb;"
"alpha=tex.a;"
"}"
"else\n"
"{	kd=mColors[1];"
"alpha=mParams[1];"
"}"
"fColor=shade(Pos,Norm,lPos,lInt,mColors[0],kd,mColors[2],mColors[3],mParams[0],alpha);"
"}"
;
static const char* pds_3dtextured_vert=
"# version 330\n"
"layout(location=0)in vec3 vPos;"
"layout(location=1)in vec3 vNorm;"
"layout(location=2)in vec2 vTexc;"
"uniform mat4	 vProj;"
"uniform mat4	 vView;"
"out vec3 Norm;"
"out vec3 Pos;"
"out vec2 Texc;"
"void main()"
"{"
"vec4 p4=vec4(vPos,1.0f)*vView;"
"vec3 p=p4.xyz/p4.w;"
"Texc=vTexc;"
"Norm=normalize(vNorm*transpose(inverse(mat3(vView))));"
"Pos=p4.xyz/p4.w;"
"gl_Position=vec4(p,1.0)*vProj;"
"}"
;
static const char* pds_dftext_frag=
"# version 330\n"
"uniform sampler2D TexId;"
"in vec3 fColor;"
"in vec2 fTexc;"
"out vec4 Color;"
"float contour(in float d,in float w){ return smoothstep(0.5-w,0.5+w,d); }"
"float samp(in vec2 uv,float w){ return contour(texture2D(TexId,uv).a,w); }"
"void main()"
"{"
"float dist=texture2D(TexId,fTexc).a;"
"float w=fwidth(dist)/2.0;"
"float alpha=contour(dist,w);"
"vec2 uv=fTexc.xy;"
"float dscale=0.354;"
"vec2 duv=dscale*(dFdx(uv)+ dFdy(uv));"
"vec4 box=vec4(uv-duv,uv+duv);"
"float sum=samp(box.xy,w)+ samp(box.zw,w)+ samp(box.xw,w)+ samp(box.zy,w);"
"alpha=(alpha + 0.5*sum)/3.0;"
"if(alpha==0)discard;"
"Color=vec4(fColor,alpha);"
"}"
;
static const char* pds_dftext_vert=
"# version 330\n"
"layout(location=0)in vec2 vPos;"
"layout(location=1)in vec4 vColor;"
"layout(location=2)in vec2 vTexc;"
"uniform mat4 vProj;"
"uniform mat4 vView;"
"uniform float zCoord;"
"out vec3 fColor;"
"out vec2 fTexc;"
"void main()"
"{"
"fColor=vColor.xyz/255.0;"
"fTexc=vTexc;"
"gl_Position=vec4(vPos.x,vPos.y,zCoord,1.0)*vView*vProj;"
"}"
;
static const char* pds_flat_frag=
"# version 330\n"
"flat in vec4 Color;"
"out vec4 fColor;"
"void main()"
"{"
"fColor=Color;"
"}"
;
static const char* pds_gouraud_frag=
"# version 330\n"
"in vec4 Color;"
"out vec4 fColor;"
"void main()"
"{"
"fColor=Color;"
"}"
;
static const char* pds_phong_frag=
"# version 330\n"
"uniform vec3	 lPos;"
"uniform vec3[3] lInt;"
"uniform vec3[4] mColors;"
"uniform float[2] mParams;"
"in vec3 Pos;"
"in vec3 Norm;"
"out vec4 fColor;"
"vec4 shade(vec3 p,vec3 n,vec3 lp,vec3[3] li,vec3 ka,vec3 kd,vec3 ks,vec3 emi,float sh,float alpha);"
"void main()"
"{"
"fColor=shade(Pos,Norm,lPos,lInt,mColors[0],mColors[1],mColors[2],mColors[3],mParams[0],mParams[1]);"
"}"
;
static const char* pds_phongmc_frag=
"# version 330\n"
"uniform vec3   lPos;"
"uniform vec3[3] lInt;"
"uniform vec3[4] mColors;"
"uniform float[2] mParams;"
"in vec3 Pos;"
"in vec4 Color;"
"in vec3 Norm;"
"out vec4 fColor;"
"vec4 shade(vec3 p,vec3 n,vec3 lp,vec3[3] li,vec3 ka,vec3 kd,vec3 ks,vec3 emi,float sh,float alpha);"
"void main()"
"{"
"fColor=shade(Pos,Norm,lPos,lInt,mColors[0],Color.rgb,mColors[2],mColors[3],mParams[0],Color.a);"
"}"
;
static const char* pds_shadefunc_glsl=
"vec4 shade(vec3 p,vec3 n,vec3 lp,vec3[3] li,vec3 ka,vec3 kd,vec3 ks,vec3 emi,float sh,float alpha)"
"{"
"vec3 l=normalize(lp);"
"vec3 v=normalize(vec3(0,0,1));"
"vec3 r=reflect(-l,n);"
"float dotln=dot(l,n);"
"vec3 amb=li[0]*ka;"
"vec3 dif=li[1]*kd*max(dotln,0.0);"
"vec3 spe=max(dotln,0.0)*li[2]*ks*pow(max(dot(v,r),0.0),sh);"
"return vec4(amb + dif + spe + emi,alpha);"
"}"
;
